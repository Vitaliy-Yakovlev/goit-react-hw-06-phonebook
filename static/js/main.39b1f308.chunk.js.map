{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Form/Form.module.css","redux/contacts-types.js","components/Form/Form.js","redux/contacts-actions.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/Heading/Heading.js","components/Container/Container.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","ADD","DELETE","CHANGE_FILTER","connect","dispatch","onSubmit","name","number","type","actionTypes","payload","id","shortid","generate","contactsActions","useState","setName","setNumber","handleInputChange","event","currentTarget","value","reset","className","s","form","preventDefault","label","input","onChange","pattern","title","required","btn","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","onClick","list","map","item","state","onChangeFilter","e","target","Heading","text","Container","children","container","Phonebook","autoClose","combineReducers","errorName","length","toast","error","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.39b1f308.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__i6YM7\",\"item\":\"Contacts_item__1GJe9\",\"btn\":\"Contacts_btn__1801i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1hmdT\",\"input\":\"Filter_input__3QeL9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__23PN0\",\"title\":\"Container_title__3zxQs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__Q_IXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__3z4nc\",\"input\":\"Form_input__2I661\",\"btn\":\"Form_btn__263F2\"};","export const ADD = 'contacts/add';\nexport const DELETE = 'contacts/delete';\nexport const CHANGE_FILTER = 'contacts/changeFilter';\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </label>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsActions.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import shortid from 'shortid';\nimport * as actionTypes from './contacts-types';\n\nexport const addContact = ({ name, number }) => ({\n  type: actionTypes.ADD,\n  payload: {\n    name,\n    id: shortid.generate(),\n    number,\n  },\n});\n\nexport const deleteContact = contactId => ({\n  type: actionTypes.DELETE,\n  payload: contactId,\n});\n\nexport const filterContact = value => ({\n  type: actionTypes.CHANGE_FILTER,\n  payload: value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onClick }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button className={s.btn} type=\"button\" onClick={() => onClick(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(contactsActions.filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Heading.module.css';\n\nconst Heading = ({ text }) => <h2 className={s.title}>{text}</h2>;\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <>\n    <h1 className={s.title}>React. Home Work 6 - Phonebook</h1>\n    <div className={s.container}>{children}</div>\n  </>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport Heading from './components/Heading';\nimport Container from './components/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Phonebook() {\n  return (\n    <>\n      <Container>\n        <Heading text=\"Phonebook\" />\n        <Form />\n        <ToastContainer autoClose={5000} />\n        <Heading text=\"Contacts\" />\n        <Filter />\n        <Contacts />\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { toast } from 'react-toastify';\nimport * as actionTypes from './contacts-types';\n\nconst itemsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      const errorName = state.filter(\n        contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n      );\n\n      if (errorName.length) {\n        toast.error(`${payload.name} is already in contacts`);\n        return state;\n      } else {\n        return [...state, payload];\n      }\n\n    case actionTypes.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'loading...'} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}